{"ast":null,"code":"var _jsxFileName = \"/Users/mac/domains/React-Express/new/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(),\n  number: yup.number().positive().integer().transform(value => isNaN(value) ? undefined : value)\n});\nconst formatNumber = value => 1;\nfunction App() {\n  _s();\n  var _errors$email;\n  const [data, setData] = useState([]);\n  const [input, setInput] = useState([]);\n  console.log(\"input\", input);\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => {\n    console.log(\"data\", data);\n\n    // axios.post('/search', data)\n    //     .then(res => setData(res.data))\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"email\",\n        ...register(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"999 999\",\n        type: \"tel\",\n        inputMode: \"numeric\",\n        autoComplete: \"cc-number\",\n        onChange: event => {\n          const {\n            value\n          } = event.target;\n          event.target.value = formatNumber(value);\n        },\n        ...register(\"number\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), data === null || data === void 0 ? void 0 : data.map((user, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.email, \" \", user.number]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"fXMaVN9KpRwIlmeHJJaZyTPOrj8=\", false, function () {\n  return [useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputMask","useForm","Controller","yupResolver","yup","axios","jsxDEV","_jsxDEV","schema","object","email","string","required","number","positive","integer","transform","value","isNaN","undefined","formatNumber","App","_s","_errors$email","data","setData","input","setInput","console","log","register","handleSubmit","control","formState","errors","resolver","onSubmit","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","message","type","inputMode","autoComplete","onChange","event","target","map","user","i","_c","$RefreshReg$"],"sources":["/Users/mac/domains/React-Express/new/client/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport * as yup from \"yup\"\nimport axios from \"axios\"\n\n\nconst schema = yup\n    .object({\n        email: yup.string().required(),\n        number: yup.number().positive().integer().transform((value) => (isNaN(value) ? undefined : value)),\n    })\n\n\nconst formatNumber = value => 1\n\nfunction App() {\n\n    const [data, setData] = useState([])\n    const [input, setInput] = useState([])\n\n    console.log(\"input\", input)\n\n    const {\n        register,\n        handleSubmit,\n        control,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(schema),\n    })\n\n    const onSubmit = (data) => {\n\n        console.log(\"data\", data)\n\n        // axios.post('/search', data)\n        //     .then(res => setData(res.data))\n        //     .catch(function (error) {\n        //         console.log(error);\n        //     });\n    }\n\n    return (\n\n      <main>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n              <input placeholder='email' {...register(\"email\" )} />\n              <p>{errors.email?.message}</p>\n\n              <input\n                  placeholder='999 999'\n                  type=\"tel\"\n                  inputMode=\"numeric\"\n                  autoComplete=\"cc-number\"\n                  onChange={(event) => {\n                      const {value} = event.target\n                      event.target.value = formatNumber(value)\n                  }}\n                  {...register(\"number\" )}\n              />\n\n\n              {/*<InputMask*/}\n              {/*    as={Controller}*/}\n              {/*    control={control}*/}\n              {/*    placeholder='number'*/}\n              {/*    mask=\"999-999\"*/}\n              {/*    {...register(\"number\" )} />*/}\n              {/*<p>{errors.number?.message}</p>*/}\n\n              <button type=\"submit\">submit</button>\n          </form>\n\n          {data?.map((user, i) => <p key={i}>{user.email} {user.number}</p>)}\n      </main>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}