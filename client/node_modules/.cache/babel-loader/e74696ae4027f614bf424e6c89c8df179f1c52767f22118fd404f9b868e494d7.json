{"ast":null,"code":"var _jsxFileName = \"/Users/mac/domains/React-Express/new/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required()\n});\nconst formatNumber = str => {\n  return str.replace(/[^0-9 ]/g, '');\n};\nfunction App() {\n  _s();\n  var _errors$email;\n  const [data, setData] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => {\n    const {\n      phone\n    } = data;\n    console.log(\"phone\", formatNumber(phone));\n\n    // axios.post('/search', data)\n    //     .then(res => setData(res.data))\n    //     .catch(function (error) {\n    //         console.log(error);\n    //     });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"email\",\n        ...register(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"phone\",\n        control: control,\n        defaultValue: \"\",\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(InputMask, {\n          mask: \"999-999\",\n          ...field,\n          children: inputProps => /*#__PURE__*/_jsxDEV(\"input\", {\n            ...inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), data === null || data === void 0 ? void 0 : data.map((user, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.email, \" \", user.number]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"uU8JGPNrj711/G9m3miIVcRsd1M=\", false, function () {\n  return [useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputMask","useForm","Controller","yupResolver","yup","axios","jsxDEV","_jsxDEV","schema","object","email","string","required","formatNumber","str","replace","App","_s","_errors$email","data","setData","register","handleSubmit","control","formState","errors","resolver","onSubmit","phone","console","log","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","message","name","defaultValue","render","field","mask","inputProps","type","map","user","i","number","_c","$RefreshReg$"],"sources":["/Users/mac/domains/React-Express/new/client/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport * as yup from \"yup\"\nimport axios from \"axios\"\n\nconst schema = yup\n    .object({\n        email: yup.string().required(),\n    })\n\nconst formatNumber = str => {\n    return str.replace(/[^0-9 ]/g, '');\n}\n\nfunction App() {\n\n    const [data, setData] = useState([])\n\n    const {\n        register,\n        handleSubmit,\n        control,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(schema),\n    })\n\n    const onSubmit = (data) => {\n\n        const {phone} = data\n\n        console.log(\"phone\", formatNumber(phone))\n\n\n\n        // axios.post('/search', data)\n        //     .then(res => setData(res.data))\n        //     .catch(function (error) {\n        //         console.log(error);\n        //     });\n    }\n\n    return (\n\n      <main>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n              <input placeholder='email' {...register(\"email\" )} />\n              <p>{errors.email?.message}</p>\n\n              <Controller\n                  name=\"phone\"\n                  control={control}\n                  defaultValue=\"\"\n                  render={({ field }) => (\n                      <InputMask mask=\"999-999\" {...field}>\n                          {(inputProps) => <input {...inputProps} />}\n                      </InputMask>\n                  )}\n              />\n\n              <button type=\"submit\">submit</button>\n          </form>\n\n          {data?.map((user, i) => <p key={i}>{user.email} {user.number}</p>)}\n      </main>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}